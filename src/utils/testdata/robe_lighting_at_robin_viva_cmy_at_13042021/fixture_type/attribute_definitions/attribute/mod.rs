#![cfg(test)]

use std::convert::TryInto;

use crate::fixture_type::attribute_definitions::attribute::Attribute;
use crate::utils::units::attribute_name::AttributeName;
use crate::utils::units::name::Name;
use crate::utils::units::physical_unit::PhysicalUnit;

pub fn expect() -> Vec<Attribute> {
    vec![
        Attribute {
            name: AttributeName::Tilt,
            pretty: "T".to_string(),
            activation_group: Some("PanTilt".to_string()),
            feature: "Position.PanTilt".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::Angle,
            color: None,
        },
        Attribute {
            name: AttributeName::PositionMSpeed,
            pretty: "Pos MSpeed".to_string(),
            activation_group: None,
            feature: "Control.Control".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::None,
            color: None,
        },
        Attribute {
            name: AttributeName::DMXInput,
            pretty: "DMX Input".to_string(),
            activation_group: None,
            feature: "Control.Control".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::None,
            color: None,
        },
        Attribute {
            name: AttributeName::DisplayIntensity,
            pretty: "Display Int".to_string(),
            activation_group: None,
            feature: "Control.Control".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::None,
            color: None,
        },
        Attribute {
            name: AttributeName::DimmerCurve,
            pretty: "Dim Curve".to_string(),
            activation_group: None,
            feature: "Control.Control".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::None,
            color: None,
        },
        Attribute {
            name: AttributeName::NoFeature,
            pretty: "NoFeature".to_string(),
            activation_group: None,
            feature: "Control.Control".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::None,
            color: None,
        },
        Attribute {
            name: AttributeName::UserDefined(Name::new_unchecked("FanMode")),
            pretty: "Fan Mode".to_string(),
            activation_group: None,
            feature: "Control.Control".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::None,
            color: None,
        },
        Attribute {
            name: AttributeName::PositionReset,
            pretty: "Pos Reset".to_string(),
            activation_group: None,
            feature: "Control.Control".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::None,
            color: None,
        },
        Attribute {
            name: AttributeName::GoboWheelReset,
            pretty: "G Reset".to_string(),
            activation_group: None,
            feature: "Control.Control".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::None,
            color: None,
        },
        Attribute {
            name: AttributeName::ZoomReset,
            pretty: "Zoom Reset".to_string(),
            activation_group: None,
            feature: "Control.Control".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::None,
            color: None,
        },
        Attribute {
            name: AttributeName::FixtureGlobalReset,
            pretty: "Fixture Global Reset".to_string(),
            activation_group: None,
            feature: "Control.Control".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::None,
            color: None,
        },
        Attribute {
            name: AttributeName::Fans,
            pretty: "Fans".to_string(),
            activation_group: None,
            feature: "Control.Control".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::None,
            color: None,
        },
        Attribute {
            name: AttributeName::ColorSub_C,
            pretty: "C".to_string(),
            activation_group: Some("ColorRGB".to_string()),
            feature: "Color.RGB".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::ColorComponent,
            color: None,
        },
        Attribute {
            name: AttributeName::ColorSub_M,
            pretty: "M".to_string(),
            activation_group: Some("ColorRGB".to_string()),
            feature: "Color.RGB".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::ColorComponent,
            color: None,
        },
        Attribute {
            name: AttributeName::ColorSub_Y,
            pretty: "Y".to_string(),
            activation_group: Some("ColorRGB".to_string()),
            feature: "Color.RGB".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::ColorComponent,
            color: None,
        },
        Attribute {
            name: AttributeName::ColorMacro_n_(1),
            pretty: "Color Macro1".to_string(),
            activation_group: None,
            feature: "Color.RGB".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::None,
            color: None,
        },
        Attribute {
            name: AttributeName::ColorMixMSpeed,
            pretty: "Color Mix MSpeed".to_string(),
            activation_group: None,
            feature: "Control.Control".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::None,
            color: None,
        },
        Attribute {
            name: AttributeName::ColorWheelSelectMSpeed,
            pretty: "Color Wheel Select MSpeed".to_string(),
            activation_group: None,
            feature: "Control.Control".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::None,
            color: None,
        },
        Attribute {
            name: AttributeName::Effects_n_Rate(1),
            pretty: "FX1 Rate".to_string(),
            activation_group: None,
            feature: "Beam.Beam".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::Frequency,
            color: None,
        },
        Attribute {
            name: AttributeName::Gobo_n_(1),
            pretty: "G1".to_string(),
            activation_group: Some("Gobo1".to_string()),
            feature: "Gobo.Gobo".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::None,
            color: None,
        },
        Attribute {
            name: AttributeName::Gobo_n_WheelAudio(1),
            pretty: "Wheel Audio".to_string(),
            activation_group: Some("Gobo1".to_string()),
            feature: "Gobo.Gobo".to_string(),
            main_attribute: Some("Gobo1".to_string()),
            physical_unit: PhysicalUnit::None,
            color: None,
        },
        Attribute {
            name: AttributeName::Gobo_n_WheelRandom(1),
            pretty: "Wheel Random".to_string(),
            activation_group: Some("Gobo1".to_string()),
            feature: "Gobo.Gobo".to_string(),
            main_attribute: Some("Gobo1".to_string()),
            physical_unit: PhysicalUnit::Frequency,
            color: None,
        },
        Attribute {
            name: AttributeName::Gobo_n_(2),
            pretty: "G2".to_string(),
            activation_group: Some("Gobo2".to_string()),
            feature: "Gobo.Gobo".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::None,
            color: None,
        },
        Attribute {
            name: AttributeName::Gobo_n_SelectShake(2),
            pretty: "Select Shake".to_string(),
            activation_group: Some("Gobo2".to_string()),
            feature: "Gobo.Gobo".to_string(),
            main_attribute: Some("Gobo2".to_string()),
            physical_unit: PhysicalUnit::Frequency,
            color: None,
        },
        Attribute {
            name: AttributeName::Gobo_n_WheelSpin(2),
            pretty: "Wheel Spin".to_string(),
            activation_group: Some("Gobo2".to_string()),
            feature: "Gobo.Gobo".to_string(),
            main_attribute: Some("Gobo2".to_string()),
            physical_unit: PhysicalUnit::AngularSpeed,
            color: None,
        },
        Attribute {
            name: AttributeName::Gobo_n_WheelAudio(2),
            pretty: "Wheel Audio".to_string(),
            activation_group: Some("Gobo2".to_string()),
            feature: "Gobo.Gobo".to_string(),
            main_attribute: Some("Gobo2".to_string()),
            physical_unit: PhysicalUnit::None,
            color: None,
        },
        Attribute {
            name: AttributeName::Gobo_n_WheelRandom(2),
            pretty: "Wheel Random".to_string(),
            activation_group: Some("Gobo2".to_string()),
            feature: "Gobo.Gobo".to_string(),
            main_attribute: Some("Gobo2".to_string()),
            physical_unit: PhysicalUnit::Frequency,
            color: None,
        },
        Attribute {
            name: AttributeName::Gobo_n_Pos(2),
            pretty: "G2 &lt;&gt;".to_string(),
            activation_group: Some("Gobo2Pos".to_string()),
            feature: "Gobo.Gobo".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::Angle,
            color: None,
        },
        Attribute {
            name: AttributeName::Gobo_n_PosRotate(2),
            pretty: "Rotate".to_string(),
            activation_group: Some("Gobo2Pos".to_string()),
            feature: "Gobo.Gobo".to_string(),
            main_attribute: Some("Gobo2Pos".to_string()),
            physical_unit: PhysicalUnit::AngularSpeed,
            color: None,
        },
        Attribute {
            name: AttributeName::Prism_n_(1),
            pretty: "Prism1".to_string(),
            activation_group: Some("Prism".to_string()),
            feature: "Beam.Beam".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::None,
            color: None,
        },
        Attribute {
            name: AttributeName::Prism_n_Macro(1),
            pretty: "Prism1 Macro".to_string(),
            activation_group: Some("Prism".to_string()),
            feature: "Beam.Beam".to_string(),
            main_attribute: Some("Prism1".to_string()),
            physical_unit: PhysicalUnit::None,
            color: None,
        },
        Attribute {
            name: AttributeName::Prism_n_PosRotate(1),
            pretty: "Rotate1".to_string(),
            activation_group: Some("Prism".to_string()),
            feature: "Beam.Beam".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::AngularSpeed,
            color: None,
        },
        Attribute {
            name: AttributeName::Frost_n_(1),
            pretty: "Frost1".to_string(),
            activation_group: None,
            feature: "Beam.Beam".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::None,
            color: None,
        },
        Attribute {
            name: AttributeName::Zoom,
            pretty: "Zoom".to_string(),
            activation_group: None,
            feature: "Focus.Focus".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::Angle,
            color: None,
        },
        Attribute {
            name: AttributeName::Focus_n_(1),
            pretty: "Focus1".to_string(),
            activation_group: None,
            feature: "Focus.Focus".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::None,
            color: None,
        },
        Attribute {
            name: AttributeName::Dimmer,
            pretty: "Dim".to_string(),
            activation_group: None,
            feature: "Dimmer.Dimmer".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::None,
            color: None,
        },
        Attribute {
            name: AttributeName::Color_n_(1),
            pretty: "C1".to_string(),
            activation_group: Some("ColorRGB".to_string()),
            feature: "Color.Color".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::None,
            color: None,
        },
        Attribute {
            name: AttributeName::Color_n_WheelSpin(1),
            pretty: "Wheel Spin".to_string(),
            activation_group: Some("ColorRGB".to_string()),
            feature: "Color.Color".to_string(),
            main_attribute: Some("Color1".to_string()),
            physical_unit: PhysicalUnit::AngularSpeed,
            color: None,
        },
        Attribute {
            name: AttributeName::Control_n_(1),
            pretty: "Ctrl1".to_string(),
            activation_group: None,
            feature: "Control.Control".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::None,
            color: None,
        },
        Attribute {
            name: AttributeName::Color_n_WheelAudio(1),
            pretty: "Wheel Audio".to_string(),
            activation_group: Some("ColorRGB".to_string()),
            feature: "Color.Color".to_string(),
            main_attribute: Some("Color1".to_string()),
            physical_unit: PhysicalUnit::None,
            color: None,
        },
        Attribute {
            name: AttributeName::Color_n_WheelRandom(1),
            pretty: "Wheel Random".to_string(),
            activation_group: Some("ColorRGB".to_string()),
            feature: "Color.Color".to_string(),
            main_attribute: Some("Color1".to_string()),
            physical_unit: PhysicalUnit::Frequency,
            color: None,
        },
        Attribute {
            name: AttributeName::Gobo_n_WheelSpin(1),
            pretty: "Wheel Spin".to_string(),
            activation_group: Some("Gobo1".to_string()),
            feature: "Gobo.Gobo".to_string(),
            main_attribute: Some("Gobo1".to_string()),
            physical_unit: PhysicalUnit::AngularSpeed,
            color: None,
        },
        Attribute {
            name: AttributeName::Gobo_n_SelectShake(1),
            pretty: "Select Shake".to_string(),
            activation_group: Some("Gobo1".to_string()),
            feature: "Gobo.Gobo".to_string(),
            main_attribute: Some("Gobo1".to_string()),
            physical_unit: PhysicalUnit::Frequency,
            color: None,
        },
        Attribute {
            name: AttributeName::Iris,
            pretty: "Iris".to_string(),
            activation_group: None,
            feature: "Beam.Beam".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::None,
            color: None,
        },
        Attribute {
            name: AttributeName::IrisPulseOpen,
            pretty: "Pulse Open".to_string(),
            activation_group: None,
            feature: "Beam.Beam".to_string(),
            main_attribute: Some("Iris".to_string()),
            physical_unit: PhysicalUnit::Frequency,
            color: None,
        },
        Attribute {
            name: AttributeName::IrisPulseClose,
            pretty: "Pulse Close".to_string(),
            activation_group: None,
            feature: "Beam.Beam".to_string(),
            main_attribute: Some("Iris".to_string()),
            physical_unit: PhysicalUnit::Frequency,
            color: None,
        },
        Attribute {
            name: AttributeName::IrisStrobeRandom,
            pretty: "Random Strobe".to_string(),
            activation_group: None,
            feature: "Beam.Beam".to_string(),
            main_attribute: Some("Iris".to_string()),
            physical_unit: PhysicalUnit::Frequency,
            color: None,
        },
        Attribute {
            name: AttributeName::Shutter_n_(1),
            pretty: "Sh1".to_string(),
            activation_group: None,
            feature: "Beam.Beam".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::None,
            color: None,
        },
        Attribute {
            name: AttributeName::Shutter_n_Strobe(1),
            pretty: "Strobe1".to_string(),
            activation_group: None,
            feature: "Beam.Beam".to_string(),
            main_attribute: Some("Shutter1".to_string()),
            physical_unit: PhysicalUnit::Frequency,
            color: None,
        },
        Attribute {
            name: AttributeName::Shutter_n_StrobePulseOpen(1),
            pretty: "Pulse Open1".to_string(),
            activation_group: None,
            feature: "Beam.Beam".to_string(),
            main_attribute: Some("Shutter1".to_string()),
            physical_unit: PhysicalUnit::Frequency,
            color: None,
        },
        Attribute {
            name: AttributeName::Shutter_n_StrobePulseClose(1),
            pretty: "Pulse Close1".to_string(),
            activation_group: None,
            feature: "Beam.Beam".to_string(),
            main_attribute: Some("Shutter1".to_string()),
            physical_unit: PhysicalUnit::Frequency,
            color: None,
        },
        Attribute {
            name: AttributeName::Shutter_n_StrobeRandom(1),
            pretty: "Random1".to_string(),
            activation_group: None,
            feature: "Beam.Beam".to_string(),
            main_attribute: Some("Shutter1".to_string()),
            physical_unit: PhysicalUnit::Frequency,
            color: None,
        },
        Attribute {
            name: AttributeName::Pan,
            pretty: "P".to_string(),
            activation_group: Some("PanTilt".to_string()),
            feature: "Position.PanTilt".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::Angle,
            color: None,
        },
        Attribute {
            name: AttributeName::BlackoutMode,
            pretty: "Blackout Mode".to_string(),
            activation_group: None,
            feature: "Control.Control".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::None,
            color: None,
        },
        Attribute {
            name: AttributeName::UserDefined(Name::new_unchecked("RoboSpot")),
            pretty: "".to_string(),
            activation_group: None,
            feature: "Control.Control".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::None,
            color: Some("0.312700,0.329000,100.000000".try_into().unwrap()),
        },
        Attribute {
            name: AttributeName::PanTiltMode,
            pretty: "PanTilt Mode".to_string(),
            activation_group: None,
            feature: "Control.Control".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::None,
            color: None,
        },
        Attribute {
            name: AttributeName::ColorMixReset,
            pretty: "Color Mix Reset".to_string(),
            activation_group: None,
            feature: "Control.Control".to_string(),
            main_attribute: None,
            physical_unit: PhysicalUnit::None,
            color: None,
        }
    ]
}